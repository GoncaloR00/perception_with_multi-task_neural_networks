<launch>

<!-- ####################################################################### -->
<!-- ############################# Arguments ############################### -->
<!-- ####################################################################### -->

    <!-- Image sources -->
    <arg name="front_camera" default="/cameras/frontcamera"/>

    <!-- Model Loaders -->
    <arg name="ml_polygraphy_fp32" default="polygraphy"/>
    <arg name="ml_polygraphy_fp16" default="polygraphy_half"/>
    <arg name="ml_torchscript_fp32" default="torchscript_cuda"/>
    <arg name="ml_torchscript_fp16" default="torchscript_cuda_half"/>
    <arg name="resa_fp16" default="resa_34_culane_cuda_half"/>
    <arg name="resa_fp32" default="resa_34_culane_cuda"/>
    <!-- Models -->
    <!-- YolopV2 -->
    <arg name="fn_yolopv2" default="yolopv2_module"/>
    <arg name="mp_yolopv2" default="$(find inference_manager)/../../models/yolopv2.torchscript"/>
    <!-- YoloV5 -->
    <arg name="fn_yolov5_det" default="yolov5sDet_module"/>
    <arg name="mp_yolov5s_det" default="$(find inference_manager)/../../models/yolov5s.torchscript"/>
    <arg name="mp_yolov5s_det_engine" default="$(find inference_manager)/../../models/teste2.trt"/>
    <!-- YoloV5 -seg -->
    <arg name="fn_yolov5_seg" default="yolov5sSeg_module"/>
    <arg name="mp_yolov5s_seg" default="$(find inference_manager)/../../models/yolov5s-seg.torchscript"/>
    <!-- ENet -->
    <arg name="fn_enet" default="ENet_module"/>
    <arg name="mp_enet" default="$(find inference_manager)/../../models/ENET.torchscript"/>
    <!-- Segformer -->
    <arg name="fn_segformer" default="Segformer_hf_module"/>
    <arg name="mp_segformer" default="$(find inference_manager)/../../models/segformer_b0_cityscapes.torchscript"/>
    <!-- YoloV8 -->
    <arg name="fn_yolov8_trt" default="yolov8_trt_module"/>
    <arg name="mp_yolov8_trtfp16" default="$(find inference_manager)/../../models/yolov8s_half.engine"/>
    <arg name="mp_yolov8_trtfp32" default="$(find inference_manager)/../../models/yolov8s_float32.engine"/>

    <!-- Resa34 Culane -->
    <arg name="fn_resa34culane" default="resa34culane_module"/>
    <arg name="mp_resa34culane" default="$(find inference_manager)/../../models/resa_r34_culane.pth"/>
<!-- ####################################################################### -->
<!-- ############################### Nodes ################################# -->
<!-- ####################################################################### -->
    <node pkg="basic_sender" name="image_sender" type="sender_node.py"/>

    <!-- <group ns='frontcamera/yolopv2-fp32'>
        <node pkg="basic_receiver" name="image_plotter" type="sync_receiver_node.py" output="screen"/>
        <node pkg="inference_manager" name="inference_node" type="inference_node.py" args="-fn $(arg fn_yolopv2) -mp $(arg mp_yolopv2) -ml $(arg ml_torchscript_fp32) -sr $(arg front_camera)"/>
    </group> -->

    <!-- <group ns='frontcamera/yolopv2-fp16'>
        <node pkg="basic_receiver" name="image_plotter" type="sync_receiver_node.py" output="screen"/>
        <node pkg="inference_manager" name="inference_node" type="inference_node.py" args="-fn $(arg fn_yolopv2) -mp $(arg mp_yolopv2) -ml $(arg ml_torchscript_fp16) -sr $(arg front_camera)"/>
    </group> -->


    <!-- <group ns='frontcamera/yolov5-fp16'>
        <node pkg="basic_receiver" name="image_plotter" type="receiver_node.py" output="screen"/>
        <node pkg="inference_manager" name="inference_node" type="inference_node.py" output="screen" args="-fn $(arg fn_yolov5_det) -mp $(arg mp_yolov5s_det) -ml $(arg ml_torchscript_fp16) -sr $(arg front_camera)"/>
    </group> -->

    <!-- <group ns='frontcamera/yolov5-fp32'>
        <node pkg="basic_receiver" name="image_plotter" type="receiver_node.py" output="screen"/>
        <node pkg="inference_manager" name="inference_node" type="inference_node.py" output="screen" args="-fn $(arg fn_yolov5_det) -mp $(arg mp_yolov5s_det) -ml $(arg ml_torchscript_fp32) -sr $(arg front_camera)"/>
    </group> -->

    <!-- <group ns='frontcamera/yolov8-fp32-trt'>
        <node pkg="basic_receiver" name="image_plotter" type="receiver_node.py" output="screen"/>
        <node pkg="inference_manager" name="inference_node" type="inference_node.py" output="screen" args="-fn $(arg fn_yolov8_trt) -mp $(arg mp_yolov8_trtfp32) -ml $(arg ml_polygraphy_fp32) -sr $(arg front_camera)"/>
    </group> -->

    <!-- <group ns='frontcamera/yolov8-fp16-trt'>
        <node pkg="basic_receiver" name="image_plotter" type="receiver_node.py" output="screen"/>
        <node pkg="inference_manager" name="inference_node" type="inference_node.py" output="screen" args="-fn $(arg fn_yolov8_trt) -mp $(arg mp_yolov8_trtfp16) -ml $(arg ml_polygraphy_fp16) -sr $(arg front_camera)"/>
    </group> -->

    <!-- <group ns='frontcamera/segformer-fp32'>
        <node pkg="basic_receiver" name="image_plotter" type="sync_receiver_node.py" output="screen"/>
        <node pkg="inference_manager" name="inference_node" type="inference_node.py" output="screen" args="-fn $(arg fn_segformer) -mp $(arg mp_segformer) -ml $(arg ml_torchscript_fp32) -sr $(arg front_camera)"/>
    </group> -->

    <!-- <group ns='frontcamera/segformer-fp16'>
        <node pkg="basic_receiver" name="image_plotter" type="sync_receiver_node.py" output="screen"/>
        <node pkg="inference_manager" name="inference_node" type="inference_node.py" output="screen" args="-fn $(arg fn_segformer) -mp $(arg mp_segformer) -ml $(arg ml_torchscript_fp16) -sr $(arg front_camera)"/>
    </group> -->

    <!-- <group ns='frontcamera/resa34culane-fp32'>
        <node pkg="basic_receiver" name="image_plotter" type="sync_receiver_node.py" output="screen"/>
        <node pkg="inference_manager" name="inference_node" type="inference_node.py" output="screen" args="-fn $(arg fn_resa34culane) -mp $(arg mp_resa34culane) -ml $(arg resa_fp32) -sr $(arg front_camera)"/>
    </group> -->







<!-- ***************************************************************************************************************************************************** -->
    <!-- <group ns='frontcamera/yolov5-seg'>
        <node pkg="basic_receiver" name="image_plotter" type="receiver_node.py" output="screen"/>
        <node pkg="inference_manager" name="inference_node" type="inference_node.py" output="screen" args="-fn $(arg fn_yolov5_seg) -mp $(arg mp_yolov5s_seg) -sr $(arg front_camera)"/>
    </group> -->

    <!-- <group ns='frontcamera/yolov5|yolov5-seg'>
        <node pkg="basic_receiver" name="image_plotter" type="sync_receiver_node.py" output="screen"/>
        <node pkg="inference_manager" name="inference_node_yolov5_det" type="inference_node.py" output="screen" args="-fn $(arg fn_yolov5_det) -mp $(arg mp_yolov5s_det) -sr $(arg front_camera)"/>
        <node pkg="inference_manager" name="inference_node_yolov5_seg" type="inference_node.py" output="screen" args="-fn $(arg fn_yolov5_seg) -mp $(arg mp_yolov5s_seg) -sr $(arg front_camera)"/>
    </group> -->
    <!-- <group ns='frontcamera/yolov5'>
        <node pkg="basic_receiver" name="image_plotter" type="receiver_node.py" output="screen"/>
        <node pkg="inference_manager" name="inference_node" type="inference_node.py" output="screen" args="-fn $(arg fn_yolov5_det) -mp $(arg mp_yolov5s_det_engine) -sr $(arg front_camera)"/>
    </group> -->

    

    

    <!-- <group ns='frontcamera/enet'>
        <node pkg="basic_receiver" name="image_plotter" type="sync_receiver_node.py" output="screen"/>
        <node pkg="inference_manager" name="inference_node" type="inference_node.py" args="-fn $(arg fn_enet) -mp $(arg mp_enet) -sr $(arg front_camera)"/>
    </group> -->
    
    
    <!-- <group ns='frontcamera/multi-model'>
        <node pkg="basic_receiver" name="image_plotter" type="sync_receiver_node.py" output="screen"/>
        <node pkg="inference_manager" name="inference_node_resa34culane" type="inference_node.py" output="screen" args="-fn $(arg fn_resa34culane) -mp $(arg mp_resa34culane) -sr $(arg front_camera)"/>
        <node pkg="inference_manager" name="inference_node_segformer" type="inference_node.py" output="screen" args="-fn $(arg fn_segformer) -mp $(arg mp_segformer) -sr $(arg front_camera)"/>
        <node pkg="inference_manager" name="inference_node_yolov5_det" type="inference_node.py" output="screen" args="-fn $(arg fn_yolov5_det) -mp $(arg mp_yolov5s_det) -sr $(arg front_camera)"/>
    </group> -->

</launch>
